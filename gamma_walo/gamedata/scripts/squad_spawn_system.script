--[[
    squad_spawn_system.script
    ------------------------
    Handles simple squad spawning logic using faction resource pools.
    Squads are spawned from HQ when enough resources are available.
    Last edit: 2025-07-25
]]

local spawn_system = {
    cooldown = {}
}
local base_logic = require 'base_node_logic'

--- Check if a faction can currently spawn a squad.
function spawn_system.can_spawn_squad(faction_id, pool)
    local need = {armor=1, weapons=2}
    for r, v in pairs(need) do
        if pool.get_resource(faction_id, r) < v then
            return false
        end
    end
    local next_time = spawn_system.cooldown[faction_id] or 0
    return os.time() >= next_time
end

--- Check if a specific base has enough resources to spawn.
function spawn_system.can_spawn_from_base(base_id, pool)
    local base = base_logic.bases[base_id]
    if not base then return false end
    local need = {scrap=1, herbs=1}
    for r, v in pairs(need) do
        if (base.stockpile[r] or 0) < v then
            return false
        end
    end
    return true
end

--- Spawn a squad and deduct resources.
function spawn_system.spawn_squad(faction_id, squad_type, pool, base_id)
    if not spawn_system.can_spawn_squad(faction_id, pool) then
        return nil
    end
    if base_id and not spawn_system.can_spawn_from_base(base_id, pool) then
        return nil
    end
    pool.consume_resource(faction_id, 'armor', 1)
    pool.consume_resource(faction_id, 'weapons', 2)
    spawn_system.cooldown[faction_id] = os.time() + 60
    if base_id then
        base_logic.consume(base_id)
    end
    return {faction=faction_id, type=squad_type, spawned=os.time()}
end

return spawn_system
