--[[
    placeable_system.script
    -----------------------
    Provides a lightweight infrastructure placement mechanic. Factions can spend
    resources to build structures that grant bonuses (handled elsewhere).
    Costs are defined per structure. This script only validates resource
    availability and updates build counts.
]]

local placeable_system = {
    -- Definition of placeable structures and their resource costs.
    placeables = {
        armoury = {cost = {scrap = 5, electronics = 2}},
        weaponsmith = {cost = {scrap = 10, electronics = 5}},
        medical_outpost = {cost = {herbs = 5, scrap = 2}},
        guard_post = {cost = {scrap = 3}}
    },

    -- Tracks how many of each structure a faction has built.
    built = {}
}

--- Attempt to build a structure for a faction.
-- @param faction string Faction identifier
-- @param structure string Type of structure to build
-- @param resource_system table Reference to resource_system module
-- @return boolean success True if built successfully
function placeable_system.build(faction, structure, resource_system)
    local config = placeable_system.placeables[structure]
    assert(config, "unknown placeable: " .. tostring(structure))

    -- Ensure faction has enough resources for all requirements.
    for rtype, amount in pairs(config.cost) do
        if resource_system.get_resource(faction, rtype) < amount then
            return false
        end
    end

    -- Consume resources now that we know they're available.
    for rtype, amount in pairs(config.cost) do
        resource_system.consume_resource(faction, rtype, amount)
    end

    -- Increment built count.
    placeable_system.built[faction] = placeable_system.built[faction] or {}
    placeable_system.built[faction][structure] = (placeable_system.built[faction][structure] or 0) + 1
    return true
end

return placeable_system
