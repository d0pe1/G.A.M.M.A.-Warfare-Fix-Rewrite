local icon_type = liz_fdda_redone_mcm.get_config("headgear_anm/icon_type")
local icon_state = liz_fdda_redone_mcm.get_config("headgear_anm/icon_state")


function on_game_start()
    RegisterScriptCallback("on_game_load", initialize)
    RegisterScriptCallback("on_option_change", initialize)
end


function initialize()
    icon_type = liz_fdda_redone_mcm.get_config("headgear_anm/icon_type")
    icon_state = liz_fdda_redone_mcm.get_config("headgear_anm/icon_state")

    actor_status.add_indicator("Gasmask", {
        index = 0,
        typ="state",
        functor={"actor_status_gasmask", "get_gasmask_status", true},
        icon="ui\\headgear_indicator\\icon_" .. icon_type .. ".dds",
        background="ui\\headgear_indicator\\background_" .. icon_type .. ".dds",
        anim_icon=false,
        anim_bk=false,
    })
end


function get_gasmask_status(visual)
    if visual then
        if icon_state == 0 then
            return 0
        elseif icon_state == 1 then
            if not is_have_helmet() then
                return 0
            else
                return 1
            end
        elseif icon_state == 2 then
            if is_have_helmet() then
                return 0
            else
                return 1
            end
        end
    end
end


function is_have_helmet()
    local o_helm = db.actor:item_in_slot(12)
    if o_helm then return true end

    local o_outfit = db.actor:item_in_slot(7)     --:cast_CustomOutfit()
    if o_outfit then
        local c_outfit = o_outfit:cast_CustomOutfit()
        if not c_outfit.bIsHelmetAvaliable then return true end
    end

    return false
end