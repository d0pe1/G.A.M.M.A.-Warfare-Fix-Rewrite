-- Stage 0: Task has been set up - player needs to get to the Darkscape close to the coded position
-- Stage 1: Player needs to kill all of the mutants (showing tag only on one of them at a time
-- to make it harder to cheese through looking at the map)
-- Stage 2: Player can receive reward from the quest giver
local state = {}

function save_state(mdata)
	mdata.dead_night_task_data = state
end

function load_state(mdata)
	if mdata.dead_night_task_data then
		state = mdata.dead_night_task_data
	end
end

task_status_functor.dead_night_task_status_functor = function(tsk,task_id)
	if not (db.actor and tsk) then return end
	local stage = tsk.stage

	if (stage == 0) then
        if
            nta_utils.actor_on_level(nta_utils.levels.darkscape)
            and nta_utils.is_dark_night()
        then
            
            if nta_utils.actor_in_range(dead_night_configs.spawn_trigger, 12) then 
                spawn()
                level.add_pp_effector ("fade_in.ppe", 200, false)
                tsk.stage = 1
            else
                spawn_sound()
            end
        end
    end

    if (stage == 1) then
        if not nta_utils.actor_on_level(nta_utils.levels.darkscape) then return 'fail' end

        if #state == 0 then
            tsk.stage = 2
        end
    end
end

function spawn()
    for _, spawn_config in pairs(dead_night_configs.spawn_configs) do
        spawn_config.section = spawn_config.section_func()
        table.insert(state, nta_utils.spawn_helper(spawn_config))
    end
end

local iterations = 0
function spawn_sound()
    iterations = iterations + 1
    printf(iterations)
    if math.fmod(iterations, 10) == 0 then
        nta_utils.spawn_sound_at_position([[new_tasks_addon\scream_1_shrike]], dead_night_configs.spawn_trigger)
        iterations = 0
    end
end

task_functor.dead_night_task_target_functor = function(task_id,field,p,tsk)
	if not (db.actor and tsk) then return nil end
	local stage = tsk.stage
    if (stage == 1 and nta_utils.actor_on_level(nta_utils.levels.darkscape)) then -- Darkscape check needed to avoid crash on task fail cleanup
        for _, id in ipairs(state) do
            local obj = alife_object(id)
            if obj and obj:alive() then return id end
        end
    end
    if (stage == 2) then
        return tsk.task_giver_id
    end
end

xr_effects.dead_night_cleanup = function()
    state = {}
end

function on_game_start()
	RegisterScriptCallback("save_state",save_state)
	RegisterScriptCallback("load_state",load_state)
    RegisterScriptCallback("monster_on_death_callback", monster_on_death_callback)
end

function monster_on_death_callback(monster)
    if not monster then return end
    local id = monster:id()
    state = a_tab_utils.filter(state, function (el) return el ~= id end)
end