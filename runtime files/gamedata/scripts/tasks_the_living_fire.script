local configs = a_the_living_fire_configs

local state = {
    garbage_cup_id = nil,
    anomaly_ids = {},
    corpse_ids = {},
    corpse_moved = {},

    enemy_ids = {}, -- Stores all relevant enemy ids (sin and mutants)
    endgame_mutants_spawned = 0
}
function save_state(mdata)
	mdata.the_living_fire_task_data = state
end

function load_state(mdata)
	if mdata.the_living_fire_task_data then
		state = mdata.the_living_fire_task_data
	end
end

local prometheus_hidden_name = 'the_living_fire_mysterious_stalker_name'
local prometheus_sid = 'the_living_fire_prometheus'

local outskirts_anomalies_spawned = false
local endgame_start = false
local endgame_mid = false
local endgame_finale = false

-- TODO: logic enforcer is a bit wonky and the logic set through it can go back to normal if the map is big enough and
-- the enemy goes offline after it got set OR when changing levels. This can cause bugs with Prometheus' followers not
-- exploding. I should probably find out how jobs work and use that instead... someday
task_status_functor.the_living_fire_task_status_functor = function(tsk,task_id)
	if not (db.actor and tsk) then return end
	local stage = tsk.stage

	if stage == 0 then
        if has_alife_info('baraholka_trader_the_living_fire_1_passed') then
            tsk.stage = 1
        end
    end

    if stage == 1 then
        if
            nta_utils.actor_on_level(nta_utils.levels.garbage)
            and nta_utils.actor_in_range(configs.garbage_prometheus_location.vector, configs.garbage_prometheus_spawn_activation_distance) 
            and nta_utils.is_dark_night()
        then
            nta_utils.spawn_helper(configs.garbage_prometheus_location)
            get_story_se_object(prometheus_sid):set_character_name(game.translate_string(prometheus_hidden_name))

            nta_utils.mass_spawn_helper(configs.garbage_zharka_locations, state.anomaly_ids)
            table.insert(state.anomaly_ids, nta_utils.spawn_helper(configs.garbage_zhar_location))

            -- Spawn a small cup in the middle of anomalies to keep them active
            state.garbage_cup_id = nta_utils.spawn_helper(configs.garbage_trash_location)

            give_info("the_living_fire_prometheus_garbage_spawned")
            nta_utils.delayed_message_by_story_id('the_living_fire_garbage_actor_msg_1', 1.5, nta_utils.story_ids.actor)
            tsk.stage = 2
        end
    end

    if stage == 2 then
        if
            nta_utils.actor_on_level(nta_utils.levels.garbage)
            and nta_utils.actor_in_range(configs.garbage_prometheus_location.vector, configs.garbage_mutant_spawn_activation_distance) 
        then
            table.insert(state.enemy_ids, nta_utils.spawn_helper(configs.garbage_mutant_location))
            nta_utils.delayed_message_by_story_id('the_living_fire_garbage_prometheus_msg_1', 1.5, prometheus_sid)
            garbage_delayed_kill_mutant()
            tsk.stage = 3
        end
    end

    if stage == 3 then
        if has_alife_info('the_living_fire_garbage_mutant_killed') then
            nta_utils.delayed_message_by_story_id('the_living_fire_garbage_actor_msg_2', 3.5, nta_utils.story_ids.actor)
            nta_utils.delayed_message_by_story_id('the_living_fire_garbage_prometheus_msg_2', 4.5, prometheus_sid)
            tsk.stage = 4
        end
    end

    if stage == 4 then
        CreateTimeEvent(0,"the_living_fire_garbage_prometheus_disappear", 8, function ()
            safe_release_manager.release({ id = state.garbage_cup_id })
            xr_effects.destroy_with_explosion(nil, get_story_object(prometheus_sid))
            nta_utils.set_timeout(despawn_anomalies, 0.5)

            nta_utils.delayed_message_by_story_id('the_living_fire_garbage_actor_msg_3', 10, nta_utils.story_ids.actor)
            give_info('the_living_fire_prometheus_garbage_disappeared')
            tsk.stage = 5
            return true
        end)
    end

    if stage == 5 then
        if has_alife_info('baraholka_trader_the_living_fire_2_passed') then
            tsk.stage = 6
        end
    end

    if stage == 6 then
        if has_alife_info('bar_informator_mlr_the_living_fire_2_passed') then
            tsk.stage = 7
        end
    end

    if stage == 7 then
        if has_alife_info('yan_stalker_sakharov_the_living_fire_1_passed') then
            tsk.stage = 8
        end
    end

    if stage == 8 then
        if nta_utils.actor_on_level(nta_utils.levels.swamp) and nta_utils.actor_in_range(
            get_story_object('mar_smart_terrain_11_3_anomaly_spot'):position(),
            configs.swamp_spawn_activation_distance
        ) then
            nta_utils.mass_spawn_helper(configs.swamp_explosion_locations)
            nta_utils.delayed_message_by_story_id('the_living_fire_swamp_actor_msg_1', 3, nta_utils.story_ids.actor, 6)
            nta_utils.delayed_message_by_story_id('the_living_fire_swamp_sakharov_msg_1', 7, nta_utils.story_ids.sakharov, 12)
            nta_utils.mass_spawn_helper(configs.swamp_mutant_locations, state.enemy_ids)
            tsk.stage = 9
        end
    end

    if stage == 9 then
        if #state.enemy_ids == 0 then
            nta_utils.delayed_message_by_story_id('the_living_fire_swamp_sakharov_msg_2', 2, nta_utils.story_ids.sakharov, 12)
            give_info('the_living_fire_swamp_mutants_killed')
            tsk.stage = 10
        end
    end

    if stage == 10 then
        if has_alife_info('yan_stalker_sakharov_the_living_fire_2_passed') then
            nta_utils.delayed_message_by_story_id('the_living_fire_yantar_snitch_msg_1', 5, nta_utils.story_ids.snitch, 8)
            nta_utils.delayed_message_by_story_id('the_living_fire_yantar_actor_msg_1', 10, nta_utils.story_ids.actor, 8)
            tsk.stage = 11
        end
    end

    if stage == 11 then
        if has_alife_info('bar_informator_mlr_the_living_fire_3_passed') then
            nta_utils.spawn_helper(configs.x18_prometheus_location)
            get_story_se_object(prometheus_sid):set_character_name(game.translate_string(prometheus_hidden_name))
            spawn_corpses(configs.dark_valley_corpses_locations)
            tsk.stage = 12
        end
    end

    if stage == 12 then
        move_corpses()
        send_dark_valley_actor_msg()
        send_x18_prometheus_msg()
        adjust_prometheus_position(configs.x18_prometheus_location.vector, 0.3)
        if has_alife_info('the_living_fire_prometheus_the_living_fire_1_passed') then
            despawn_prometheus_mild()
            tsk.stage = 13
            CreateTimeEvent(0,"the_living_fire_x18_spawn_military", 1, function ()
                spawn_enemies_with_beh(configs.x18_military_locations, [[scripts\x18_tlf_military_beh.ltx]])
                -- Exception because it's not NPC
                CreateTimeEvent(0,"the_living_fire_x18_send_military_message", 4, function () 
                    dynamic_news_helper.send_tip(game.translate_string('the_living_fire_x18_military_msg_1'), game.translate_string("army"), nil,nil, 'ui_icon_news_trx_army', nil, 'npc')
                    return true
                end)
                return true
            end)
        end
    end

    if stage == 13 then
        set_x18_military_relation()
        if has_alife_info('bar_informator_mlr_the_living_fire_4_passed') then
            nta_utils.delayed_message_by_story_id('the_living_fire_bar_actor_msg_1', 5, nta_utils.story_ids.actor, 10)
            despawn_corpses()
            tsk.stage = 14
        end
    end

    if stage == 14 then
        if has_alife_info('esc_2_12_stalker_trader_the_living_fire_1_passed') then
            nta_utils.delayed_message_by_story_id('the_living_fire_escape_sakharov_msg_1', 5, nta_utils.story_ids.sakharov, 10)
            tsk.stage = 15
        end
    end

    if stage == 15 then
        if has_alife_info('yan_stalker_sakharov_the_living_fire_3_passed') then
            nta_utils.delayed_message_by_story_id('the_living_fire_yantar_barman_msg_1', 5, nta_utils.story_ids.barman, 10)
            nta_utils.spawn_helper(configs.x16_prometheus_location)
            spawn_enemies_with_beh(configs.x16_greh_locations, [[scripts\x16_tlf_greh_beh.ltx]])
            spawn_corpses(configs.x16_corpse_locations)
            tsk.stage = 16
        end
    end

    if stage == 16 then
        clear_x16_mutants()
        move_corpses()
        send_x16_prometheus_msg()
        if has_alife_info('the_living_fire_prometheus_the_living_fire_2_passed') then
            despawn_prometheus_mild()
            tsk.stage = 17
        end
    end

    if stage == 17 then
        if has_alife_info('yan_stalker_sakharov_the_living_fire_4_passed') then
            despawn_corpses()
            spawn_enemies_with_beh(configs.red_forest_greh_locations, [[scripts\red_forest_tlf_greh_beh.ltx]])
            tsk.stage = 18
        end
    end

    if stage == 18 then
        if
            nta_utils.actor_on_level(nta_utils.levels.red_forest)
            and nta_utils.actor_in_range(configs.red_forest_mutants_trigger.vector, configs.red_forest_mutants_trigger_range)
        then
            nta_utils.mass_spawn_helper(configs.red_forest_explosion_locations)
            nta_utils.mass_spawn_helper(configs.red_forest_mutant_locations, state.enemy_ids)
            earthquake_effect()
            tsk.stage = 19
        end
    end

    if stage == 19 then
        if #state.enemy_ids == 0 then
            spawn_enemies_with_beh(configs.red_forest_isg_locations, [[scripts\red_forest_tlf_isg_beh.ltx]])
            nta_utils.delayed_message_by_story_id('the_living_fire_red_forest_actor_msg_1', 5, nta_utils.story_ids.actor, 10)
            nta_utils.delayed_message_by_story_id('the_living_fire_red_forest_sakharov_msg_1', 10, nta_utils.story_ids.sakharov, 10)
            tsk.stage = 20
        end
    end

    if stage == 20 then
        if
            nta_utils.actor_on_level(nta_utils.levels.red_forest)
            and nta_utils.actor_in_range(configs.red_forest_actor_msg_trigger.vector, configs.red_forest_actor_msg_trigger_range)
        then
            nta_utils.delayed_message_by_story_id('the_living_fire_red_forest_actor_msg_2', 2, nta_utils.story_ids.actor, 10)
            give_info('the_living_fire_red_forest_actor_msg_2_sent')
            tsk.stage = 21
        end
    end

    if stage == 21 then
        if has_alife_info('bar_informator_mlr_the_living_fire_5_passed') then
            state.anomaly_ids = {}
            nta_utils.spawn_helper(configs.outskirts_prometheus_location)
            nta_utils.delayed_message_by_story_id('the_living_fire_bar_actor_msg_2', 4, nta_utils.story_ids.actor, 10)
            nta_utils.delayed_message_by_story_id('the_living_fire_bar_sakharov_msg_1', 10, nta_utils.story_ids.sakharov, 10)
            tsk.stage = 22
        end
    end

    if stage >= 22 and stage <=25 then
        adjust_prometheus_position(configs.outskirts_prometheus_location.vector, 1.5)
    end

    if stage == 22 then
        if 
            nta_utils.actor_on_level(nta_utils.levels.outskirts)
            and nta_utils.actor_in_range(configs.outskirts_prometheus_location.vector, configs.outskirts_greh_activation_distance)
            and not has_alife_info('tlf_outskirts_greh_spawned')
        then
            spawn_enemies_with_beh(configs.outskirts_greh_locations, [[scripts\outskirts_tlf_greh_beh.ltx]])
            give_info('tlf_outskirts_greh_spawned')
        end
        if
            nta_utils.actor_on_level(nta_utils.levels.outskirts)
            and nta_utils.actor_in_range(configs.outskirts_prometheus_location.vector, configs.outskirts_prometheus_msg_trigger_distance)
            and not endgame_start
        then
            endgame_start = true
            nta_utils.delayed_message_by_story_id('the_living_fire_outskirts_actor_msg_1', 0, nta_utils.story_ids.actor, 10)
            nta_utils.delayed_message_by_story_id('the_living_fire_outskirts_prometheus_msg_1', 4, prometheus_sid, 10)

            CreateTimeEvent(0,"the_living_fire_start_endgame", 7, function () 
                earthquake_effect()
                spawn_outskirts_anomalies()
                level.set_weather_fx("fx_blowout_day")
                nta_utils.mass_spawn_helper(configs.outskirts_mutant_locations, state.enemy_ids)
                tsk.stage = 23
                return true
            end)
        end
    end

    if stage == 23 then
        if 
            #state.enemy_ids == 0
            and not endgame_mid
        then
            endgame_mid = true
            nta_utils.delayed_message_by_story_id('the_living_fire_outskirts_prometheus_msg_2', 0, prometheus_sid, 10)
            CreateTimeEvent(0,"the_living_fire_endgame_greh", 2, function () 
                spawn_enemies_with_beh(configs.outskirts_endgame_greh_locations, [[scripts\outskirts_tlf_endgame_greh_beh.ltx]], true)
                tsk.stage = 24
                return true
            end)
        end
    end

    if stage == 24 then
        if 
            #state.enemy_ids == 0
            and not endgame_finale
        then
            endgame_finale = true
            nta_utils.delayed_message_by_story_id('the_living_fire_outskirts_sakharov_msg_1', 0, nta_utils.story_ids.sakharov, 6)
            nta_utils.delayed_message_by_story_id('the_living_fire_outskirts_actor_msg_2', 2, nta_utils.story_ids.actor, 6)
            nta_utils.delayed_message_by_story_id('the_living_fire_outskirts_prometheus_msg_3', 8, prometheus_sid, 4)
            nta_utils.delayed_message_by_story_id('the_living_fire_outskirts_actor_msg_3', 10, nta_utils.story_ids.actor, 6)

            CreateTimeEvent(0,"the_living_fire_endgame_despawn_anomalies", 6, function () 
                give_info('the_living_fire_endgame_finale')
                despawn_anomalies()
                tsk.stage = 25
                return true
            end)
        end
    end

    if stage >=23 and stage <=24 then
        -- Anomalies can be doubled without it
        CreateTimeEvent(0,"the_living_fire_anomaly_spawn_wait", 1, function () 
            if not outskirts_anomalies_spawned and not has_alife_info('the_living_fire_endgame_finale') then
                state.anomaly_ids = {}
                -- Anomalies despawn on reloading the game
                spawn_outskirts_anomalies()
            end
            return true
        end)
    end

    if stage == 25 then
        CreateTimeEvent(0,"the_living_fire_prometheus_kill_actor", 10, function () 
            if not has_alife_info('the_living_fire_prometheus_killed_gg') then
                prometheus_kill_actor()
            end
            return true
        end)
        if has_alife_info('the_living_fire_prometheus_killed_gg') then
            nta_utils.delayed_message_by_story_id('the_living_fire_outskirts_actor_msg_4', 4, nta_utils.story_ids.actor, 6)
            nta_utils.delayed_message_by_story_id('the_living_fire_outskirts_sakharov_msg_2', 10, nta_utils.story_ids.sakharov, 10)
            tsk.stage = 26
        end
    end
end

function garbage_delayed_kill_mutant()
    CreateTimeEvent(0,"the_living_fire_garbage_kill_mutant", 2, function ()
        nta_utils.spawn_sound_at_position([[characters_voice\human\greh_1\fight\enemy_hit\enemy_hit_6]], get_story_object(prometheus_sid):position())

        CreateTimeEvent(0,"the_living_fire_garbage_kill_mutant_2", 1.5, function ()
            local mutant = level.object_by_id(state.enemy_ids[1])
            local spawn_config = nta_utils.obj_position_to_spawn_config_partial(mutant)
            spawn_config.section = 'zone_zhar'
            spawn_config.is_anomaly = true
            table.insert(state.anomaly_ids, nta_utils.spawn_helper(spawn_config))

            nta_utils.spawn_sound_at_position([[monsters\boar\boar_anomaly_0]], mutant:position())
            nta_utils.spawn_sound_at_position([[new_tasks_addon\zhar_blow]], mutant:position())

            safe_release_manager.release({id = mutant:id()})
            state.enemy_ids = {}
            give_info('the_living_fire_garbage_mutant_killed')
            return true
        end)
        return true
    end)
end

function despawn_anomalies()
    for _, anomaly_id in pairs(state.anomaly_ids) do
        safe_release_manager.release({id = anomaly_id})
    end
end

function snitch_reward_1()
    if not has_alife_info('bar_informator_mlr_the_living_fire_reward_1_given') then
        give_info('bar_informator_mlr_the_living_fire_reward_1_given')
        nta_money_rewards.give_money_5000()
    end
end

function snitch_reward_2()
    if not has_alife_info('bar_informator_mlr_the_living_fire_reward_2_given') then
        give_info('bar_informator_mlr_the_living_fire_reward_2_given')
        nta_money_rewards.give_money_10000()
    end
end

function spawn_corpses(cfg)
    nta_utils.mass_spawn_helper(cfg, state.corpse_ids)
end

function move_corpses()
    for _, corpse_id in ipairs(state.corpse_ids) do
        local obj = level.object_by_id(corpse_id)
        if obj and not state.corpse_moved[corpse_id] then
            -- Trigger some force on the object so it turns into ragdoll
            obj:get_physics_shell():apply_force(0, 0, 1)
            state.corpse_moved[corpse_id] = true
        end
    end
end

function despawn_corpses()
    for _, id in ipairs(state.corpse_ids) do
        safe_release_manager.release({id = id})
    end
    state.corpse_ids = {}
    state.corpse_moved = {}
end

function send_dark_valley_actor_msg()
    if
        not has_alife_info('the_living_fire_dark_valley_actor_msg_sent') 
        and nta_utils.actor_on_level(nta_utils.levels.dark_valley)
        and nta_utils.actor_in_range(configs.dark_valley_actor_msg_trigger_location.vector, configs.dark_valley_actor_msg_trigger_distance)
    then
        give_info("the_living_fire_dark_valley_actor_msg_sent")
        nta_utils.delayed_message_by_story_id('the_living_fire_dark_valley_actor_msg_1', 2, nta_utils.story_ids.actor, 10)
    end
end

function send_x18_prometheus_msg()
    if
        not has_alife_info('the_living_fire_x18_prometheus_msg_sent') 
        and nta_utils.actor_on_level(nta_utils.levels.x18)
        and nta_utils.actor_in_range(configs.x18_prometheus_location.vector, configs.x18_prometheus_msg_trigger_distance)
    then
        give_info("the_living_fire_x18_prometheus_msg_sent")
        nta_utils.delayed_message_by_story_id('the_living_fire_x18_prometheus_msg_1', 0, prometheus_sid, 10)
    end
end

function send_x16_prometheus_msg()
    if
        not has_alife_info('the_living_fire_x16_prometheus_msg_sent') 
        and nta_utils.actor_on_level(nta_utils.levels.x16)
        and nta_utils.actor_in_range(configs.x16_prometheus_location.vector, configs.x16_prometheus_msg_trigger_distance)
    then
        give_info("the_living_fire_x16_prometheus_msg_sent")
        nta_utils.delayed_message_by_story_id('the_living_fire_x16_prometheus_msg_1', 0, prometheus_sid, 10)
    end
end

function adjust_prometheus_position(vec, distance)
    -- Prometheus is moved to the ground on reloading the game few times - correction needed
    local obj = get_story_object(prometheus_sid)
    if obj then
        if obj:position():distance_to(vec) > distance then
			obj:set_movement_type(move.walk)
            obj:set_npc_position(vec)
			-- X-ray at its prime - sometimes when Prometheus spawns, the gravity is affecting him (problematic with Outskirts part)
			-- Switching movement to walk and then back to stand fixes the issue and puts him back into "wait" state
			CreateTimeEvent(0,"the_living_fire_prometheus_stop_moving", 0.2, function ()
				obj:set_movement_type(move.stand)
				return true
			end)
        end
    end
end

function despawn_prometheus_mild()
    local pos = nta_utils.obj_position_to_spawn_config_partial(get_story_object(prometheus_sid)).vector
    nta_utils.spawn_particles_at_position([[anomaly2\heat_03]], pos)
    local zhar_sound = nta_utils.spawn_sound_at_position([[new_tasks_addon\zhar_blow]], pos)

    nta_utils.set_timeout(function () zhar_sound:stop() end, 4)
    safe_release_manager.release(get_story_se_object(prometheus_sid))
end

function set_x18_military_relation()
    for _, id in ipairs(state.enemy_ids) do
        local obj = level.object_by_id(id)
        if obj and obj:alive() then
            obj:set_relation(-5000, db.actor)
        end
    end
end

function spawn_enemies_with_beh(cfg, script_file, push_to_table)
    for i, spawn_config in ipairs(cfg) do
        local id = nta_utils.spawn_helper(spawn_config)
        logic_enforcer.assign(id, script_file,'logic', 'beh@pos_' .. i)
        if push_to_table then
            table.insert(state.enemy_ids, id)
        end
    end
end

function clear_x16_mutants()
    if nta_utils.actor_on_level(nta_utils.levels.x16) then
        level.iterate_nearest(configs.x16_middle.vector, configs.x16_mutant_scanning_range, function (obj)
            if IsMonster(obj) and obj:alive() then
                safe_release_manager.release({id = obj:id()})
            end
        end)
    end
end

function earthquake_effect()
    nta_utils.spawn_attached_sound([[new_tasks_addon\blowout_boom_02_old]])
    nta_utils.spawn_attached_sound([[new_tasks_addon\earthquake_old]])
    nta_utils.earthquake_screen_effect_strong(6)
end

function spawn_outskirts_anomalies()
    outskirts_anomalies_spawned = true
    for i, coords in ipairs(configs.outskirts_anomaly_xz_data) do
        -- Spawning 100 anomalies kills FPS - try with lowered number
        if math.fmod(i,2) == 0 then
            local anomaly_location = a_tab_utils.shallow_copy(configs.outskirts_prometheus_location)
            anomaly_location.vector = vector():set(coords[1], 0, coords[2])
            anomaly_location.section = 'zone_zhar_tlf'
            anomaly_location.is_anomaly = true
            table.insert(state.anomaly_ids, nta_utils.spawn_helper(anomaly_location))
        end
    end
end


xr_effects.tlf_on_enemy_death = function(actor, npc, p)
    if not npc then return end
    local id = npc:id()
    state.enemy_ids = a_tab_utils.filter(state.enemy_ids, function (el) return el ~= id end)
end

xr_effects.tlf_on_endgame_poltergeist_death = function(actor, npc, p)
    if not npc then return end
    state.endgame_mutants_spawned = state.endgame_mutants_spawned + 1

    if state.endgame_mutants_spawned < 8 then
        local id = nta_utils.spawn_helper(configs.outskirts_mutant_locations[math.random(1,4)])
        table.insert(state.enemy_ids, id)
    end
end

function prometheus_kill_actor()
    nta_utils.spawn_attached_sound([[characters_voice\human\greh_1\fight\attack\attack_4]])

    CreateTimeEvent(0,"the_living_fire_prometheus_revenge", 2, function ()
        local spawn_config = nta_utils.obj_position_to_spawn_config_partial(db.actor)
        spawn_config.section = 'zone_zhar'
        spawn_config.is_anomaly = true
        spawn_config.vector.y = spawn_config.vector.y - 1

        nta_utils.spawn_helper(spawn_config)
        nta_utils.spawn_attached_sound([[new_tasks_addon\zhar_blow]])

        CreateTimeEvent(0,"the_living_fire_prometheus_revenge_player_death", 0.2, function ()
            db.actor:set_health_ex(0)
            return true
        end)
        return true
    end)
end

function tlf_complete()
    task_manager.get_task_manager( ):set_task_completed('bar_informator_mlr_task_the_living_fire')
    -- TODO: Remove when Grok exposes a table in his script
    if grok_artefacts_random_condition then
        CreateTimeEvent(0,"the_living_fire_gamma_temp_fix", 1, function ()
            db.actor:iterate_inventory(function (_, item)
                if item:section() == 'af_tlf_prometheus' then
		            item:set_condition(0.98)
                end
            end, nil)
            return true
        end)
    end
end

task_functor.the_living_fire_task_target_functor = function(task_id,field,p,tsk)
	if not (db.actor and tsk) then return nil end

    if tsk.stage == 0 then
        return get_story_object_id(nta_utils.story_ids.flea_market_trader_day)
    end

    if tsk.stage == 5 then
        return get_story_object_id(nta_utils.story_ids.flea_market_trader_day)
    end

    if tsk.stage == 6 then
        return get_story_object_id(nta_utils.story_ids.snitch)
    end

    if tsk.stage == 7 then
        return get_story_object_id(nta_utils.story_ids.sakharov)
    end

    if tsk.stage == 8 then
        return get_story_object_id('mar_smart_terrain_11_3_anomaly_spot')
    end

    if tsk.stage == 9 then
        return state.enemy_ids[1]
    end

    if tsk.stage == 10 then
        return get_story_object_id(nta_utils.story_ids.sakharov)
    end

    if tsk.stage == 11 then
        return get_story_object_id(nta_utils.story_ids.snitch)
    end

    if tsk.stage == 12 then
        return get_story_object_id(prometheus_sid)
    end

    if tsk.stage == 13 then
        return get_story_object_id(nta_utils.story_ids.snitch)
    end

    if tsk.stage == 14 then
        return get_story_object_id(nta_utils.story_ids.sidorovich)
    end

    if tsk.stage == 15 then
        return get_story_object_id(nta_utils.story_ids.sakharov)
    end

    if tsk.stage == 16 then
        return get_story_object_id(prometheus_sid)
    end

    if tsk.stage == 17 then
        return get_story_object_id(nta_utils.story_ids.sakharov)
    end

    if tsk.stage == 18 then
        return get_story_object_id('red_smart_terrain_6_3_anomaly_spot')
    end

    if tsk.stage == 19 then
        return state.enemy_ids[1]
    end

    if tsk.stage == 20 then
        return SIMBOARD:get_smart_by_name('red_smart_terrain_monsters_2').id
    end

    if tsk.stage == 21 then
        return get_story_object_id(nta_utils.story_ids.snitch)
    end

    if tsk.stage == 22 then
        return get_story_object_id(prometheus_sid)
    end

    if tsk.stage == 23 then
        return state.enemy_ids[1]
    end
    
    if tsk.stage == 24 then
        return state.enemy_ids[1]
    end

    if tsk.stage == 25 then
        return get_story_object_id(prometheus_sid)
    end

    if tsk.stage == 26 then
        return get_story_object_id(nta_utils.story_ids.sakharov)
    end
    return
end

local hit_already = false
function npc_on_before_hit(npc,shit,bone_id)
    if npc:id() == get_story_object_id(prometheus_sid) then
        shit.power = 0
        npc:set_health_ex(1)
        if shit.draftsman and shit.draftsman:id() == AC_ID and not hit_already then
            if not has_alife_info('the_living_fire_endgame_finale') then
                hit_already = true
                prometheus_kill_actor()
            else 
                local wpn = level.object_by_id(shit.weapon_id)
	            local sec = wpn:section()
                if bone_id == 15 and (sec == 'wpn_gauss' or sec == 'wpn_gauss_quest') then
                    safe_release_manager.release(get_story_se_object(prometheus_sid))
                    local explosion_spawn_config = a_tab_utils.shallow_copy(configs.outskirts_prometheus_location)
                    explosion_spawn_config.vector.y = explosion_spawn_config.vector.y - 3
                    explosion_spawn_config.vector.z = explosion_spawn_config.vector.z + 1
                    explosion_spawn_config.vector.x = explosion_spawn_config.vector.x + 1

                    explosion_spawn_config.section = 'immediate_fiery_explosion'
                    for i=1,5 do nta_utils.spawn_helper(explosion_spawn_config) end
                    give_info("the_living_fire_prometheus_killed_gg")
                end
            end
        end
    end
end

function on_game_start()
	RegisterScriptCallback("save_state",save_state)
	RegisterScriptCallback("load_state",load_state)
    RegisterScriptCallback("npc_on_before_hit",npc_on_before_hit)
end