

--[[
		UTILITY
--]]

local dte = demonized_time_events

function actor_has_armor(tbl)
	armor_to_remove = nil
	to_return = nil
	condition = nil
	for k,v in pairs(tbl) do
		local avail = mlr_utils.have_item(k, 1)
		if avail then
			obj = db.actor:object(k)
			condition = obj:condition()
			to_return = k
		end
	end
	
	return to_return,condition
end


function degrade_armor(sec, condition)
	obj = db.actor:object(sec)
	if obj and condition then 
		obj:set_condition(condition)
	end
	return true
end


function exchange_armor(first_speaker, second_speaker,table)
	armor_to_remove,reward_condition = actor_has_armor(table)
	reward_armor = table["reward"]
	trade_cost = table["cost"]

	if armor_to_remove and db.actor:money() >= trade_cost then
        dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, armor_to_remove)
        dialogs.relocate_money_from_actor(first_speaker, second_speaker, trade_cost)
        dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, reward_armor)
		
		dte.CreateTimeEvent("grok_armor_trade", "grok_armor_trade_degrade_armor", 0.25, degrade_armor, reward_armor, reward_condition )
    end
end




--[[
		EXCHANGES
--]]



--[[
				DUTY
--]]
function duty_light(first_speaker, second_speaker)
	local table = grok_armor_convert.dolg_light
	exchange_armor(first_speaker,second_speaker,table)
end 

function duty_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.dolg_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function duty_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.dolg_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function duty_exolight(first_speaker, second_speaker)
	local table = grok_armor_convert.dolg_exolight
	exchange_armor(first_speaker,second_speaker,table)
end 

function duty_skat(first_speaker, second_speaker)
	local table = grok_armor_convert.dolg_skat
	exchange_armor(first_speaker,second_speaker,table)
end 

function duty_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.dolg_exo
	exchange_armor(first_speaker,second_speaker,table)
end 

function duty_noso(first_speaker, second_speaker)
	local table = grok_armor_convert.dolg_noso
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				BANDITS
--]]
function bandit_light(first_speaker, second_speaker)
	local table = grok_armor_convert.bandit_light
	exchange_armor(first_speaker,second_speaker,table)
end 

function bandit_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.bandit_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function bandit_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.bandit_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function bandit_exolight(first_speaker, second_speaker)
	local table = grok_armor_convert.bandit_exolight
	exchange_armor(first_speaker,second_speaker,table)
end 

function bandit_skat(first_speaker, second_speaker)
	local table = grok_armor_convert.bandit_skat
	exchange_armor(first_speaker,second_speaker,table)
end 

function bandit_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.bandit_exo
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				FREEDOM
--]]
function freedom_light(first_speaker, second_speaker)
	local table = grok_armor_convert.freedom_light
	exchange_armor(first_speaker,second_speaker,table)
end 

function freedom_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.freedom_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function freedom_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.freedom_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function freedom_exolight(first_speaker, second_speaker)
	local table = grok_armor_convert.freedom_exolight
	exchange_armor(first_speaker,second_speaker,table)
end 

function freedom_skat(first_speaker, second_speaker)
	local table = grok_armor_convert.freedom_skat
	exchange_armor(first_speaker,second_speaker,table)
end 

function freedom_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.freedom_exo
	exchange_armor(first_speaker,second_speaker,table)
end 

function freedom_noso(first_speaker, second_speaker)
	local table = grok_armor_convert.freedom_noso
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				MERCS
--]]
function merc_light(first_speaker, second_speaker)
	local table = grok_armor_convert.merc_light
	exchange_armor(first_speaker,second_speaker,table)
end 

function merc_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.merc_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function merc_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.merc_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function merc_exolight(first_speaker, second_speaker)
	local table = grok_armor_convert.merc_exolight
	exchange_armor(first_speaker,second_speaker,table)
end 

function merc_skat(first_speaker, second_speaker)
	local table = grok_armor_convert.merc_skat
	exchange_armor(first_speaker,second_speaker,table)
end 

function merc_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.merc_exo
	exchange_armor(first_speaker,second_speaker,table)
end 

function merc_noso(first_speaker, second_speaker)
	local table = grok_armor_convert.merc_noso
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				CLEAR SKY
--]]
function cs_light(first_speaker, second_speaker)
	local table = grok_armor_convert.cs_light
	exchange_armor(first_speaker,second_speaker,table)
end 

function cs_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.cs_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function cs_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.cs_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function cs_exolight(first_speaker, second_speaker)
	local table = grok_armor_convert.cs_exolight
	exchange_armor(first_speaker,second_speaker,table)
end 

function cs_skat(first_speaker, second_speaker)
	local table = grok_armor_convert.cs_skat
	exchange_armor(first_speaker,second_speaker,table)
end 

function cs_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.cs_exo
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				LONER
--]]
function loner_light(first_speaker, second_speaker)
	local table = grok_armor_convert.loner_light
	exchange_armor(first_speaker,second_speaker,table)
end 

function loner_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.loner_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function loner_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.loner_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function loner_exolight(first_speaker, second_speaker)
	local table = grok_armor_convert.loner_exolight
	exchange_armor(first_speaker,second_speaker,table)
end 

function loner_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.loner_exo
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				ARMY
--]]
function army_light(first_speaker, second_speaker)
	local table = grok_armor_convert.army_light
	exchange_armor(first_speaker,second_speaker,table)
end 

function army_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.army_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function army_exolight(first_speaker, second_speaker)
	local table = grok_armor_convert.army_exolight
	exchange_armor(first_speaker,second_speaker,table)
end 

function army_skat(first_speaker, second_speaker)
	local table = grok_armor_convert.army_skat
	exchange_armor(first_speaker,second_speaker,table)
end 

function army_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.army_exo
	exchange_armor(first_speaker,second_speaker,table)
end 

function army_noso(first_speaker, second_speaker)
	local table = grok_armor_convert.army_noso
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				RENEGADES
--]]
function renegade_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.renegade_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function renegade_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.renegade_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function renegade_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.renegade_exo
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				MONOLITH
--]]
function mono_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.mono_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function mono_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.mono_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function mono_exolight(first_speaker, second_speaker)
	local table = grok_armor_convert.mono_exolight
	exchange_armor(first_speaker,second_speaker,table)
end 

function mono_skat(first_speaker, second_speaker)
	local table = grok_armor_convert.mono_skat
	exchange_armor(first_speaker,second_speaker,table)
end 

function mono_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.mono_exo
	exchange_armor(first_speaker,second_speaker,table)
end 

function mono_noso(first_speaker, second_speaker)
	local table = grok_armor_convert.mono_noso
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				SIN
--]]
function greh_light(first_speaker, second_speaker)
	local table = grok_armor_convert.greh_light
	exchange_armor(first_speaker,second_speaker,table)
end 

function greh_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.greh_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function greh_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.greh_exo
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				UNISG
--]]
function isg_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.isg_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function isg_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.isg_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function isg_exolight(first_speaker, second_speaker)
	local table = grok_armor_convert.isg_exolight
	exchange_armor(first_speaker,second_speaker,table)
end 

function isg_skat(first_speaker, second_speaker)
	local table = grok_armor_convert.isg_skat
	exchange_armor(first_speaker,second_speaker,table)
end 

function isg_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.isg_exo
	exchange_armor(first_speaker,second_speaker,table)
end 

function isg_noso(first_speaker, second_speaker)
	local table = grok_armor_convert.isg_noso
	exchange_armor(first_speaker,second_speaker,table)
end 



--[[
				ECOLOG
--]]
function ecolog_medium(first_speaker, second_speaker)
	local table = grok_armor_convert.ecolog_medium
	exchange_armor(first_speaker,second_speaker,table)
end 

function ecolog_sci(first_speaker, second_speaker)
	local table = grok_armor_convert.ecolog_sci
	exchange_armor(first_speaker,second_speaker,table)
end 

function ecolog_exo(first_speaker, second_speaker)
	local table = grok_armor_convert.ecolog_exo
	exchange_armor(first_speaker,second_speaker,table)
end 