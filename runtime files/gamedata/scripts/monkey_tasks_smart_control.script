OldSmartControlPFNF = tasks_smart_control.postpone_for_next_frame

function tasks_smart_control.postpone_for_next_frame(task_id, squad_id)
	local squad = alife_object(squad_id)
	if (squad) then

		-- Location
		local location = alife():level_name(game_graph():vertex(squad.m_game_vertex_id):level_id())
		for k in squad:squad_members() do
			local se_obj = k.object or alife_object(k.id)
			if se_obj then
				location = dynamic_news_helper.GetPointDescription(se_obj)
				break
			end
		end
		local str_location = game.translate_string("st_location") .. " " .. location
		
		-- Community
		local str_comm = ""
		local community = squad.player_id
		if is_squad_monster[community] then
			str_comm = game.translate_string("st_sq_type") .. " " .. game.translate_string(community)
		else
			str_comm = game.translate_string("st_mm_new_game_faction_2") .. " " .. game.translate_string(community)
		end
		
		-- Build News
		local news_caption = game.translate_string(task_manager.task_ini:r_string_ex(task_id, "title")) or "error"
		local news_text = str_comm .. "\\n " .. str_location
		local news_ico = news_manager.tips_icons[squad.player_id] or task_manager.task_ini:r_string_ex(task_id, "icon") or "ui_iconsTotal_mutant"
		--local news_ico = task_manager.task_ini:r_string_ex(task_id, "icon") or "ui_iconsTotal_mutant"
		--local news_text = str_location
		db.actor:give_talk_message2(news_caption, news_text, news_ico, "iconed_answer_item", task_id)
	end
	return true
end